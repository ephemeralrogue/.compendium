import { createSchema } from 'graphql-yoga';
import { Resource, Tag } from '../../lib/types/resources';
// import createChildLogger from '../../../lib/logger.js';

/*
const schemaLogger = createChildLogger('schema', {
	transaction: 'createSchema'
});
*/

const schema = createSchema({
	typeDefs: /* GraphQL */ `
		type Query {
			resource: Resource,
			tags: Tag[],
		}

		type Tag {
			name: String,
			description: String,
			resources: Resource[]
		}

		type Resource {
			name: String,
			description: String,
			URL: String,
			tags: Tag[]
		}
	`,
	resolvers: {
		Query: {
			getResourcesByTag: (parent, args: { tags: string[] }, context, info): Resource => {
				// mongoDB logic here
				return {
					name: 'Resource Name',
					description: 'Resource Description',
					URL: 'Resource URL',
					tags: []
				}
			},
			getTags: (parent, args, context, info): Tag[] => {
				// mongoDB logic here
				return [
					{
						name: 'Tag Name',
						description: 'Tag Description',
						resources: []
					}
				]
			},
		}
	}
});
/*
.catch(err => {
	// eslint-disable-next-line no-console
	console.error(err);
});
*/

export default schema;